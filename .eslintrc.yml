root: true
env:
  browser: true
  es2020: true
extends:
  - eslint:recommended
  - plugin:@typescript-eslint/recommended
  - prettier
parser: '@typescript-eslint/parser'
parserOptions:
  sourceType: module
  ecmaFeatures:
    impliedStrict: true
plugins:
  - '@typescript-eslint'
  - 'prettier'
rules:
  block-scoped-var:
    - error
  brace-style:
    - error
    - 1tbs
    - allowSingleLine: true
  camelcase:
    - error
  class-methods-use-this:
    - error
  complexity:
    - warn
    - 20
  default-case-last:
    - error
  default-param-last:
    - error
  dot-notation:
    - error
  eqeqeq:
    - error
    - smart
  func-style:
    - error
    - declaration
  grouped-accessor-pairs:
    - error
  init-declarations:
    - error
  linebreak-style:
    - error
    - unix
  max-depth:
    - warn
    - 4
  max-len:
    - warn
    - 120
  new-cap:
    - error
  new-parens:
    - error
    - always
  no-array-constructor:
    - error
  no-console:
    - warn
  no-constructor-return:
    - error
  no-duplicate-imports:
    - error
  no-else-return:
    - error
  no-empty-function:
    - error
    - allow: [ 'constructors' ]
  no-eval:
    - error
  no-extend-native:
    - error
  no-extra-label:
    - error
  no-extra-parens:
    - error
    - all
  no-floating-decimal:
    - error
  no-implicit-coercion:
    - error
  no-implicit-globals:
    - error
  no-implied-eval:
    - error
  no-invalid-this:
    - error
  no-iterator:
    - error
  no-labels:
    - error
  no-label-var:
    - error
  no-lone-blocks:
    - error
  no-lonely-if:
    - error
  no-loop-func:
    - error
  no-loss-of-precision:
    - error
  no-mixed-operators:
    - error
  no-multi-assign:
    - error
  no-multiple-empty-lines:
    - error
    - max: 2
      maxEOF: 0
      maxBOF: 0
  no-multi-spaces:
    - error
  no-multi-str:
    - error
  no-negated-condition:
    - error
  no-nested-ternary:
    - error
  no-new:
    - error
  no-new-func:
    - error
  no-new-object:
    - error
  no-new-wrappers:
    - error
  no-nonoctal-decimal-escape:
    - error
  no-octal-escape:
    - error
  no-param-reassign:
    - error
  no-proto:
    - error
  no-promise-executor-return:
    - error
  no-return-assign:
    - error
  no-return-await:
    - error
  no-script-url:
    - error
  no-self-compare:
    - error
  no-sequences:
    - error
  no-shadow:
    - off
  no-throw-literal:
    - error
  no-undef-init:
    - error
  no-undefined:
    - error
  no-underscore-dangle:
    - off
  no-unmodified-loop-condition:
    - warn
  no-unneeded-ternary:
    - error
  no-unused-expressions:
    - error
  no-unused-vars:
    - off
  no-unreachable-loop:
    - error
  no-unsafe-optional-chaining:
    - error
  no-use-before-define:
    - off
  no-useless-backreference:
    - error
  no-useless-call:
    - error
  no-useless-computed-key:
    - error
    - enforceForClassMembers: true
  no-useless-concat:
    - error
  no-useless-return:
    - error
  no-var:
    - error
  no-void:
    - error
  no-warning-comments:
    - warn
  object-shorthand:
    - error
    - always
  one-var:
    - error
    - never
  operator-assignment:
    - error
    - always
  operator-linebreak:
    - off
  prefer-arrow-callback:
    - error
  prefer-const:
    - error
  prefer-exponentiation-operator:
    - error
  prefer-object-spread:
    - error
  prefer-promise-reject-errors:
    - error
  prefer-regex-literals:
    - error
  prefer-rest-params:
    - error
  prefer-spread:
    - error
  quote-props:
    - error
    - consistent-as-needed
  quotes:
    - error
    - single
  radix:
    - error
    - as-needed
  require-await:
    - error
  rest-spread-spacing:
    - error
    - never
  semi:
    - error
    - always
  semi-style:
    - error
    - last
  switch-colon-spacing:
    - error
    - after: true
      before: false
  unicode-bom:
    - error
    - never
  yoda:
    - error
    - always
  '@typescript-eslint/no-magic-numbers':
    - error
    - ignoreArrayIndexes: true
      ignoreEnums: true
  '@typescript-eslint/no-shadow':
    - error
  '@typescript-eslint/explicit-function-return-type':
    - error
    - allowExpressions: true
      allowTypedFunctionExpressions: true
  '@typescript-eslint/no-unused-vars':
    - error
    - argsIgnorePattern: '^_'
  '@typescript-eslint/no-use-before-define':
    - off
  prettier/prettier:
    - error
